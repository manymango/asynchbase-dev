// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Comparator.proto

package org.hbase.async.generated;

public final class ComparatorPB {
  private ComparatorPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional bytes serialized_comparator = 2;
    /**
     * <code>optional bytes serialized_comparator = 2;</code>
     */
    boolean hasSerializedComparator();
    /**
     * <code>optional bytes serialized_comparator = 2;</code>
     */
    com.google.protobuf.ByteString getSerializedComparator();
  }
  /**
   * Protobuf type {@code Comparator}
   */
  public static final class Comparator extends
      com.google.protobuf.GeneratedMessageLite
      implements ComparatorOrBuilder {
    // Use Comparator.newBuilder() to construct.
    private Comparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Comparator(boolean noInit) {}

    private static final Comparator defaultInstance;
    public static Comparator getDefaultInstance() {
      return defaultInstance;
    }

    public Comparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Comparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              serializedComparator_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Comparator> PARSER =
        new com.google.protobuf.AbstractParser<Comparator>() {
      public Comparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Comparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Comparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes serialized_comparator = 2;
    public static final int SERIALIZED_COMPARATOR_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString serializedComparator_;
    /**
     * <code>optional bytes serialized_comparator = 2;</code>
     */
    public boolean hasSerializedComparator() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes serialized_comparator = 2;</code>
     */
    public com.google.protobuf.ByteString getSerializedComparator() {
      return serializedComparator_;
    }

    private void initFields() {
      name_ = "";
      serializedComparator_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, serializedComparator_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, serializedComparator_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.Comparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.Comparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code Comparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.Comparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.ComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.Comparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        serializedComparator_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.Comparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.Comparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.Comparator build() {
        org.hbase.async.generated.ComparatorPB.Comparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.Comparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.Comparator result = new org.hbase.async.generated.ComparatorPB.Comparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serializedComparator_ = serializedComparator_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.Comparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.Comparator.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          
        }
        if (other.hasSerializedComparator()) {
          setSerializedComparator(other.getSerializedComparator());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.Comparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.Comparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        
        return this;
      }

      // optional bytes serialized_comparator = 2;
      private com.google.protobuf.ByteString serializedComparator_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes serialized_comparator = 2;</code>
       */
      public boolean hasSerializedComparator() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes serialized_comparator = 2;</code>
       */
      public com.google.protobuf.ByteString getSerializedComparator() {
        return serializedComparator_;
      }
      /**
       * <code>optional bytes serialized_comparator = 2;</code>
       */
      public Builder setSerializedComparator(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serializedComparator_ = value;
        
        return this;
      }
      /**
       * <code>optional bytes serialized_comparator = 2;</code>
       */
      public Builder clearSerializedComparator() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serializedComparator_ = getDefaultInstance().getSerializedComparator();
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Comparator)
    }

    static {
      defaultInstance = new Comparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Comparator)
  }

  public interface ByteArrayComparableOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // optional bytes value = 1;
    /**
     * <code>optional bytes value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>optional bytes value = 1;</code>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code ByteArrayComparable}
   */
  public static final class ByteArrayComparable extends
      com.google.protobuf.GeneratedMessageLite
      implements ByteArrayComparableOrBuilder {
    // Use ByteArrayComparable.newBuilder() to construct.
    private ByteArrayComparable(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private ByteArrayComparable(boolean noInit) {}

    private static final ByteArrayComparable defaultInstance;
    public static ByteArrayComparable getDefaultInstance() {
      return defaultInstance;
    }

    public ByteArrayComparable getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ByteArrayComparable(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ByteArrayComparable> PARSER =
        new com.google.protobuf.AbstractParser<ByteArrayComparable>() {
      public ByteArrayComparable parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ByteArrayComparable(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ByteArrayComparable> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>optional bytes value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes value = 1;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private void initFields() {
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, value_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, value_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.ByteArrayComparable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.ByteArrayComparable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code ByteArrayComparable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.ByteArrayComparable, Builder>
        implements org.hbase.async.generated.ComparatorPB.ByteArrayComparableOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.ByteArrayComparable.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable build() {
        org.hbase.async.generated.ComparatorPB.ByteArrayComparable result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable buildPartial() {
        org.hbase.async.generated.ComparatorPB.ByteArrayComparable result = new org.hbase.async.generated.ComparatorPB.ByteArrayComparable(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.ByteArrayComparable other) {
        if (other == org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.ByteArrayComparable parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.ByteArrayComparable) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes value = 1;
      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes value = 1;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>optional bytes value = 1;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        
        return this;
      }
      /**
       * <code>optional bytes value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ByteArrayComparable)
    }

    static {
      defaultInstance = new ByteArrayComparable(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ByteArrayComparable)
  }

  public interface BinaryComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .ByteArrayComparable comparable = 1;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    boolean hasComparable();
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable();
  }
  /**
   * Protobuf type {@code BinaryComparator}
   */
  public static final class BinaryComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements BinaryComparatorOrBuilder {
    // Use BinaryComparator.newBuilder() to construct.
    private BinaryComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BinaryComparator(boolean noInit) {}

    private static final BinaryComparator defaultInstance;
    public static BinaryComparator getDefaultInstance() {
      return defaultInstance;
    }

    public BinaryComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BinaryComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = comparable_.toBuilder();
              }
              comparable_ = input.readMessage(org.hbase.async.generated.ComparatorPB.ByteArrayComparable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(comparable_);
                comparable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BinaryComparator> PARSER =
        new com.google.protobuf.AbstractParser<BinaryComparator>() {
      public BinaryComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BinaryComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BinaryComparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ByteArrayComparable comparable = 1;
    public static final int COMPARABLE_FIELD_NUMBER = 1;
    private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public boolean hasComparable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
      return comparable_;
    }

    private void initFields() {
      comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasComparable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, comparable_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comparable_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.BinaryComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code BinaryComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.BinaryComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.BinaryComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.BinaryComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.BinaryComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.BinaryComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.BinaryComparator build() {
        org.hbase.async.generated.ComparatorPB.BinaryComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.BinaryComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.BinaryComparator result = new org.hbase.async.generated.ComparatorPB.BinaryComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.comparable_ = comparable_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.BinaryComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.BinaryComparator.getDefaultInstance()) return this;
        if (other.hasComparable()) {
          mergeComparable(other.getComparable());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasComparable()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.BinaryComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.BinaryComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ByteArrayComparable comparable = 1;
      private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public boolean hasComparable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
        return comparable_;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        comparable_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(
          org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder builderForValue) {
        comparable_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder mergeComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            comparable_ != org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance()) {
          comparable_ =
            org.hbase.async.generated.ComparatorPB.ByteArrayComparable.newBuilder(comparable_).mergeFrom(value).buildPartial();
        } else {
          comparable_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder clearComparable() {
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BinaryComparator)
    }

    static {
      defaultInstance = new BinaryComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BinaryComparator)
  }

  public interface LongComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .ByteArrayComparable comparable = 1;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    boolean hasComparable();
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable();
  }
  /**
   * Protobuf type {@code LongComparator}
   */
  public static final class LongComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements LongComparatorOrBuilder {
    // Use LongComparator.newBuilder() to construct.
    private LongComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private LongComparator(boolean noInit) {}

    private static final LongComparator defaultInstance;
    public static LongComparator getDefaultInstance() {
      return defaultInstance;
    }

    public LongComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private LongComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = comparable_.toBuilder();
              }
              comparable_ = input.readMessage(org.hbase.async.generated.ComparatorPB.ByteArrayComparable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(comparable_);
                comparable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<LongComparator> PARSER =
        new com.google.protobuf.AbstractParser<LongComparator>() {
      public LongComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LongComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LongComparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ByteArrayComparable comparable = 1;
    public static final int COMPARABLE_FIELD_NUMBER = 1;
    private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public boolean hasComparable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
      return comparable_;
    }

    private void initFields() {
      comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasComparable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, comparable_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comparable_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.LongComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.LongComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code LongComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.LongComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.LongComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.LongComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.LongComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.LongComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.LongComparator build() {
        org.hbase.async.generated.ComparatorPB.LongComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.LongComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.LongComparator result = new org.hbase.async.generated.ComparatorPB.LongComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.comparable_ = comparable_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.LongComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.LongComparator.getDefaultInstance()) return this;
        if (other.hasComparable()) {
          mergeComparable(other.getComparable());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasComparable()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.LongComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.LongComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ByteArrayComparable comparable = 1;
      private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public boolean hasComparable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
        return comparable_;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        comparable_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(
          org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder builderForValue) {
        comparable_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder mergeComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            comparable_ != org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance()) {
          comparable_ =
            org.hbase.async.generated.ComparatorPB.ByteArrayComparable.newBuilder(comparable_).mergeFrom(value).buildPartial();
        } else {
          comparable_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder clearComparable() {
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LongComparator)
    }

    static {
      defaultInstance = new LongComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LongComparator)
  }

  public interface BinaryPrefixComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .ByteArrayComparable comparable = 1;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    boolean hasComparable();
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable();
  }
  /**
   * Protobuf type {@code BinaryPrefixComparator}
   */
  public static final class BinaryPrefixComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements BinaryPrefixComparatorOrBuilder {
    // Use BinaryPrefixComparator.newBuilder() to construct.
    private BinaryPrefixComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BinaryPrefixComparator(boolean noInit) {}

    private static final BinaryPrefixComparator defaultInstance;
    public static BinaryPrefixComparator getDefaultInstance() {
      return defaultInstance;
    }

    public BinaryPrefixComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BinaryPrefixComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = comparable_.toBuilder();
              }
              comparable_ = input.readMessage(org.hbase.async.generated.ComparatorPB.ByteArrayComparable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(comparable_);
                comparable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BinaryPrefixComparator> PARSER =
        new com.google.protobuf.AbstractParser<BinaryPrefixComparator>() {
      public BinaryPrefixComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BinaryPrefixComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BinaryPrefixComparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .ByteArrayComparable comparable = 1;
    public static final int COMPARABLE_FIELD_NUMBER = 1;
    private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public boolean hasComparable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
      return comparable_;
    }

    private void initFields() {
      comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasComparable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, comparable_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comparable_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code BinaryPrefixComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.BinaryPrefixComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator build() {
        org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator result = new org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.comparable_ = comparable_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator.getDefaultInstance()) return this;
        if (other.hasComparable()) {
          mergeComparable(other.getComparable());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasComparable()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.BinaryPrefixComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ByteArrayComparable comparable = 1;
      private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public boolean hasComparable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
        return comparable_;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        comparable_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(
          org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder builderForValue) {
        comparable_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder mergeComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            comparable_ != org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance()) {
          comparable_ =
            org.hbase.async.generated.ComparatorPB.ByteArrayComparable.newBuilder(comparable_).mergeFrom(value).buildPartial();
        } else {
          comparable_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder clearComparable() {
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BinaryPrefixComparator)
    }

    static {
      defaultInstance = new BinaryPrefixComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BinaryPrefixComparator)
  }

  public interface BitComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .ByteArrayComparable comparable = 1;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    boolean hasComparable();
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable();

    // required .BitComparator.BitwiseOp bitwise_op = 2;
    /**
     * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
     */
    boolean hasBitwiseOp();
    /**
     * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
     */
    org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp getBitwiseOp();
  }
  /**
   * Protobuf type {@code BitComparator}
   */
  public static final class BitComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements BitComparatorOrBuilder {
    // Use BitComparator.newBuilder() to construct.
    private BitComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BitComparator(boolean noInit) {}

    private static final BitComparator defaultInstance;
    public static BitComparator getDefaultInstance() {
      return defaultInstance;
    }

    public BitComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BitComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = comparable_.toBuilder();
              }
              comparable_ = input.readMessage(org.hbase.async.generated.ComparatorPB.ByteArrayComparable.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(comparable_);
                comparable_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp value = org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000002;
                bitwiseOp_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BitComparator> PARSER =
        new com.google.protobuf.AbstractParser<BitComparator>() {
      public BitComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BitComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BitComparator> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code BitComparator.BitwiseOp}
     */
    public enum BitwiseOp
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>AND = 1;</code>
       */
      AND(0, 1),
      /**
       * <code>OR = 2;</code>
       */
      OR(1, 2),
      /**
       * <code>XOR = 3;</code>
       */
      XOR(2, 3),
      ;

      /**
       * <code>AND = 1;</code>
       */
      public static final int AND_VALUE = 1;
      /**
       * <code>OR = 2;</code>
       */
      public static final int OR_VALUE = 2;
      /**
       * <code>XOR = 3;</code>
       */
      public static final int XOR_VALUE = 3;


      public final int getNumber() { return value; }

      public static BitwiseOp valueOf(int value) {
        switch (value) {
          case 1: return AND;
          case 2: return OR;
          case 3: return XOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BitwiseOp>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<BitwiseOp>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BitwiseOp>() {
              public BitwiseOp findValueByNumber(int number) {
                return BitwiseOp.valueOf(number);
              }
            };

      private final int value;

      private BitwiseOp(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:BitComparator.BitwiseOp)
    }

    private int bitField0_;
    // required .ByteArrayComparable comparable = 1;
    public static final int COMPARABLE_FIELD_NUMBER = 1;
    private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_;
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public boolean hasComparable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .ByteArrayComparable comparable = 1;</code>
     */
    public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
      return comparable_;
    }

    // required .BitComparator.BitwiseOp bitwise_op = 2;
    public static final int BITWISE_OP_FIELD_NUMBER = 2;
    private org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp bitwiseOp_;
    /**
     * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
     */
    public boolean hasBitwiseOp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
     */
    public org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp getBitwiseOp() {
      return bitwiseOp_;
    }

    private void initFields() {
      comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      bitwiseOp_ = org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp.AND;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasComparable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBitwiseOp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, comparable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, bitwiseOp_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, comparable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, bitwiseOp_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.BitComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.BitComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code BitComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.BitComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.BitComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.BitComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000001);
        bitwiseOp_ = org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp.AND;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.BitComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.BitComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.BitComparator build() {
        org.hbase.async.generated.ComparatorPB.BitComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.BitComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.BitComparator result = new org.hbase.async.generated.ComparatorPB.BitComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.comparable_ = comparable_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bitwiseOp_ = bitwiseOp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.BitComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.BitComparator.getDefaultInstance()) return this;
        if (other.hasComparable()) {
          mergeComparable(other.getComparable());
        }
        if (other.hasBitwiseOp()) {
          setBitwiseOp(other.getBitwiseOp());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasComparable()) {
          
          return false;
        }
        if (!hasBitwiseOp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.BitComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.BitComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .ByteArrayComparable comparable = 1;
      private org.hbase.async.generated.ComparatorPB.ByteArrayComparable comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public boolean hasComparable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public org.hbase.async.generated.ComparatorPB.ByteArrayComparable getComparable() {
        return comparable_;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (value == null) {
          throw new NullPointerException();
        }
        comparable_ = value;

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder setComparable(
          org.hbase.async.generated.ComparatorPB.ByteArrayComparable.Builder builderForValue) {
        comparable_ = builderForValue.build();

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder mergeComparable(org.hbase.async.generated.ComparatorPB.ByteArrayComparable value) {
        if (((bitField0_ & 0x00000001) == 0x00000001) &&
            comparable_ != org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance()) {
          comparable_ =
            org.hbase.async.generated.ComparatorPB.ByteArrayComparable.newBuilder(comparable_).mergeFrom(value).buildPartial();
        } else {
          comparable_ = value;
        }

        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .ByteArrayComparable comparable = 1;</code>
       */
      public Builder clearComparable() {
        comparable_ = org.hbase.async.generated.ComparatorPB.ByteArrayComparable.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      // required .BitComparator.BitwiseOp bitwise_op = 2;
      private org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp bitwiseOp_ = org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp.AND;
      /**
       * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
       */
      public boolean hasBitwiseOp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
       */
      public org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp getBitwiseOp() {
        return bitwiseOp_;
      }
      /**
       * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
       */
      public Builder setBitwiseOp(org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        bitwiseOp_ = value;
        
        return this;
      }
      /**
       * <code>required .BitComparator.BitwiseOp bitwise_op = 2;</code>
       */
      public Builder clearBitwiseOp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bitwiseOp_ = org.hbase.async.generated.ComparatorPB.BitComparator.BitwiseOp.AND;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:BitComparator)
    }

    static {
      defaultInstance = new BitComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:BitComparator)
  }

  public interface NullComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code NullComparator}
   */
  public static final class NullComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements NullComparatorOrBuilder {
    // Use NullComparator.newBuilder() to construct.
    private NullComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private NullComparator(boolean noInit) {}

    private static final NullComparator defaultInstance;
    public static NullComparator getDefaultInstance() {
      return defaultInstance;
    }

    public NullComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private NullComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<NullComparator> PARSER =
        new com.google.protobuf.AbstractParser<NullComparator>() {
      public NullComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NullComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NullComparator> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.NullComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.NullComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code NullComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.NullComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.NullComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.NullComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.NullComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.NullComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.NullComparator build() {
        org.hbase.async.generated.ComparatorPB.NullComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.NullComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.NullComparator result = new org.hbase.async.generated.ComparatorPB.NullComparator(this);
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.NullComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.NullComparator.getDefaultInstance()) return this;
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.NullComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.NullComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:NullComparator)
    }

    static {
      defaultInstance = new NullComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:NullComparator)
  }

  public interface RegexStringComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string pattern = 1;
    /**
     * <code>required string pattern = 1;</code>
     */
    boolean hasPattern();
    /**
     * <code>required string pattern = 1;</code>
     */
    java.lang.String getPattern();
    /**
     * <code>required string pattern = 1;</code>
     */
    com.google.protobuf.ByteString
        getPatternBytes();

    // required int32 pattern_flags = 2;
    /**
     * <code>required int32 pattern_flags = 2;</code>
     */
    boolean hasPatternFlags();
    /**
     * <code>required int32 pattern_flags = 2;</code>
     */
    int getPatternFlags();

    // required string charset = 3;
    /**
     * <code>required string charset = 3;</code>
     */
    boolean hasCharset();
    /**
     * <code>required string charset = 3;</code>
     */
    java.lang.String getCharset();
    /**
     * <code>required string charset = 3;</code>
     */
    com.google.protobuf.ByteString
        getCharsetBytes();

    // optional string engine = 4;
    /**
     * <code>optional string engine = 4;</code>
     */
    boolean hasEngine();
    /**
     * <code>optional string engine = 4;</code>
     */
    java.lang.String getEngine();
    /**
     * <code>optional string engine = 4;</code>
     */
    com.google.protobuf.ByteString
        getEngineBytes();
  }
  /**
   * Protobuf type {@code RegexStringComparator}
   */
  public static final class RegexStringComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements RegexStringComparatorOrBuilder {
    // Use RegexStringComparator.newBuilder() to construct.
    private RegexStringComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private RegexStringComparator(boolean noInit) {}

    private static final RegexStringComparator defaultInstance;
    public static RegexStringComparator getDefaultInstance() {
      return defaultInstance;
    }

    public RegexStringComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private RegexStringComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pattern_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              patternFlags_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              charset_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              engine_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<RegexStringComparator> PARSER =
        new com.google.protobuf.AbstractParser<RegexStringComparator>() {
      public RegexStringComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegexStringComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegexStringComparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string pattern = 1;
    public static final int PATTERN_FIELD_NUMBER = 1;
    private java.lang.Object pattern_;
    /**
     * <code>required string pattern = 1;</code>
     */
    public boolean hasPattern() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string pattern = 1;</code>
     */
    public java.lang.String getPattern() {
      java.lang.Object ref = pattern_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pattern_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string pattern = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPatternBytes() {
      java.lang.Object ref = pattern_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pattern_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 pattern_flags = 2;
    public static final int PATTERN_FLAGS_FIELD_NUMBER = 2;
    private int patternFlags_;
    /**
     * <code>required int32 pattern_flags = 2;</code>
     */
    public boolean hasPatternFlags() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 pattern_flags = 2;</code>
     */
    public int getPatternFlags() {
      return patternFlags_;
    }

    // required string charset = 3;
    public static final int CHARSET_FIELD_NUMBER = 3;
    private java.lang.Object charset_;
    /**
     * <code>required string charset = 3;</code>
     */
    public boolean hasCharset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string charset = 3;</code>
     */
    public java.lang.String getCharset() {
      java.lang.Object ref = charset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          charset_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string charset = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCharsetBytes() {
      java.lang.Object ref = charset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        charset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string engine = 4;
    public static final int ENGINE_FIELD_NUMBER = 4;
    private java.lang.Object engine_;
    /**
     * <code>optional string engine = 4;</code>
     */
    public boolean hasEngine() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string engine = 4;</code>
     */
    public java.lang.String getEngine() {
      java.lang.Object ref = engine_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          engine_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string engine = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEngineBytes() {
      java.lang.Object ref = engine_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        engine_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      pattern_ = "";
      patternFlags_ = 0;
      charset_ = "";
      engine_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPattern()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPatternFlags()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCharset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, patternFlags_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCharsetBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getEngineBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPatternBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, patternFlags_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCharsetBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getEngineBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.RegexStringComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.RegexStringComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code RegexStringComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.RegexStringComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.RegexStringComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.RegexStringComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        pattern_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        patternFlags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        charset_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        engine_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.RegexStringComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.RegexStringComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.RegexStringComparator build() {
        org.hbase.async.generated.ComparatorPB.RegexStringComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.RegexStringComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.RegexStringComparator result = new org.hbase.async.generated.ComparatorPB.RegexStringComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pattern_ = pattern_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.patternFlags_ = patternFlags_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.charset_ = charset_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.engine_ = engine_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.RegexStringComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.RegexStringComparator.getDefaultInstance()) return this;
        if (other.hasPattern()) {
          bitField0_ |= 0x00000001;
          pattern_ = other.pattern_;
          
        }
        if (other.hasPatternFlags()) {
          setPatternFlags(other.getPatternFlags());
        }
        if (other.hasCharset()) {
          bitField0_ |= 0x00000004;
          charset_ = other.charset_;
          
        }
        if (other.hasEngine()) {
          bitField0_ |= 0x00000008;
          engine_ = other.engine_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPattern()) {
          
          return false;
        }
        if (!hasPatternFlags()) {
          
          return false;
        }
        if (!hasCharset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.RegexStringComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.RegexStringComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string pattern = 1;
      private java.lang.Object pattern_ = "";
      /**
       * <code>required string pattern = 1;</code>
       */
      public boolean hasPattern() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string pattern = 1;</code>
       */
      public java.lang.String getPattern() {
        java.lang.Object ref = pattern_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pattern_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string pattern = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPatternBytes() {
        java.lang.Object ref = pattern_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pattern_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string pattern = 1;</code>
       */
      public Builder setPattern(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pattern_ = value;
        
        return this;
      }
      /**
       * <code>required string pattern = 1;</code>
       */
      public Builder clearPattern() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pattern_ = getDefaultInstance().getPattern();
        
        return this;
      }
      /**
       * <code>required string pattern = 1;</code>
       */
      public Builder setPatternBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pattern_ = value;
        
        return this;
      }

      // required int32 pattern_flags = 2;
      private int patternFlags_ ;
      /**
       * <code>required int32 pattern_flags = 2;</code>
       */
      public boolean hasPatternFlags() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 pattern_flags = 2;</code>
       */
      public int getPatternFlags() {
        return patternFlags_;
      }
      /**
       * <code>required int32 pattern_flags = 2;</code>
       */
      public Builder setPatternFlags(int value) {
        bitField0_ |= 0x00000002;
        patternFlags_ = value;
        
        return this;
      }
      /**
       * <code>required int32 pattern_flags = 2;</code>
       */
      public Builder clearPatternFlags() {
        bitField0_ = (bitField0_ & ~0x00000002);
        patternFlags_ = 0;
        
        return this;
      }

      // required string charset = 3;
      private java.lang.Object charset_ = "";
      /**
       * <code>required string charset = 3;</code>
       */
      public boolean hasCharset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string charset = 3;</code>
       */
      public java.lang.String getCharset() {
        java.lang.Object ref = charset_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          charset_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string charset = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCharsetBytes() {
        java.lang.Object ref = charset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          charset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string charset = 3;</code>
       */
      public Builder setCharset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        charset_ = value;
        
        return this;
      }
      /**
       * <code>required string charset = 3;</code>
       */
      public Builder clearCharset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        charset_ = getDefaultInstance().getCharset();
        
        return this;
      }
      /**
       * <code>required string charset = 3;</code>
       */
      public Builder setCharsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        charset_ = value;
        
        return this;
      }

      // optional string engine = 4;
      private java.lang.Object engine_ = "";
      /**
       * <code>optional string engine = 4;</code>
       */
      public boolean hasEngine() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string engine = 4;</code>
       */
      public java.lang.String getEngine() {
        java.lang.Object ref = engine_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          engine_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string engine = 4;</code>
       */
      public com.google.protobuf.ByteString
          getEngineBytes() {
        java.lang.Object ref = engine_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          engine_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string engine = 4;</code>
       */
      public Builder setEngine(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        engine_ = value;
        
        return this;
      }
      /**
       * <code>optional string engine = 4;</code>
       */
      public Builder clearEngine() {
        bitField0_ = (bitField0_ & ~0x00000008);
        engine_ = getDefaultInstance().getEngine();
        
        return this;
      }
      /**
       * <code>optional string engine = 4;</code>
       */
      public Builder setEngineBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        engine_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:RegexStringComparator)
    }

    static {
      defaultInstance = new RegexStringComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:RegexStringComparator)
  }

  public interface SubstringComparatorOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string substr = 1;
    /**
     * <code>required string substr = 1;</code>
     */
    boolean hasSubstr();
    /**
     * <code>required string substr = 1;</code>
     */
    java.lang.String getSubstr();
    /**
     * <code>required string substr = 1;</code>
     */
    com.google.protobuf.ByteString
        getSubstrBytes();
  }
  /**
   * Protobuf type {@code SubstringComparator}
   */
  public static final class SubstringComparator extends
      com.google.protobuf.GeneratedMessageLite
      implements SubstringComparatorOrBuilder {
    // Use SubstringComparator.newBuilder() to construct.
    private SubstringComparator(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SubstringComparator(boolean noInit) {}

    private static final SubstringComparator defaultInstance;
    public static SubstringComparator getDefaultInstance() {
      return defaultInstance;
    }

    public SubstringComparator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SubstringComparator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              substr_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SubstringComparator> PARSER =
        new com.google.protobuf.AbstractParser<SubstringComparator>() {
      public SubstringComparator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubstringComparator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SubstringComparator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string substr = 1;
    public static final int SUBSTR_FIELD_NUMBER = 1;
    private java.lang.Object substr_;
    /**
     * <code>required string substr = 1;</code>
     */
    public boolean hasSubstr() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string substr = 1;</code>
     */
    public java.lang.String getSubstr() {
      java.lang.Object ref = substr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          substr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string substr = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSubstrBytes() {
      java.lang.Object ref = substr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        substr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      substr_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSubstr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSubstrBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSubstrBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.hbase.async.generated.ComparatorPB.SubstringComparator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.hbase.async.generated.ComparatorPB.SubstringComparator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code SubstringComparator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.hbase.async.generated.ComparatorPB.SubstringComparator, Builder>
        implements org.hbase.async.generated.ComparatorPB.SubstringComparatorOrBuilder {
      // Construct using org.hbase.async.generated.ComparatorPB.SubstringComparator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        substr_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public org.hbase.async.generated.ComparatorPB.SubstringComparator getDefaultInstanceForType() {
        return org.hbase.async.generated.ComparatorPB.SubstringComparator.getDefaultInstance();
      }

      public org.hbase.async.generated.ComparatorPB.SubstringComparator build() {
        org.hbase.async.generated.ComparatorPB.SubstringComparator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.hbase.async.generated.ComparatorPB.SubstringComparator buildPartial() {
        org.hbase.async.generated.ComparatorPB.SubstringComparator result = new org.hbase.async.generated.ComparatorPB.SubstringComparator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.substr_ = substr_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(org.hbase.async.generated.ComparatorPB.SubstringComparator other) {
        if (other == org.hbase.async.generated.ComparatorPB.SubstringComparator.getDefaultInstance()) return this;
        if (other.hasSubstr()) {
          bitField0_ |= 0x00000001;
          substr_ = other.substr_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSubstr()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.hbase.async.generated.ComparatorPB.SubstringComparator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.hbase.async.generated.ComparatorPB.SubstringComparator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string substr = 1;
      private java.lang.Object substr_ = "";
      /**
       * <code>required string substr = 1;</code>
       */
      public boolean hasSubstr() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string substr = 1;</code>
       */
      public java.lang.String getSubstr() {
        java.lang.Object ref = substr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          substr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string substr = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSubstrBytes() {
        java.lang.Object ref = substr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          substr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string substr = 1;</code>
       */
      public Builder setSubstr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        substr_ = value;
        
        return this;
      }
      /**
       * <code>required string substr = 1;</code>
       */
      public Builder clearSubstr() {
        bitField0_ = (bitField0_ & ~0x00000001);
        substr_ = getDefaultInstance().getSubstr();
        
        return this;
      }
      /**
       * <code>required string substr = 1;</code>
       */
      public Builder setSubstrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        substr_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SubstringComparator)
    }

    static {
      defaultInstance = new SubstringComparator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SubstringComparator)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
